#!/usr/bin/env python
"""
build_e05_absolute_urdf.py
- Expands E05_robot.urdf.xacro -> flat URDF (requires `pip install xacro`)
- Rewrites all <mesh filename="..."> to absolute paths under ./meshes
- Writes E05_robot_ABS.urdf next to this script
"""

from __future__ import annotations
from pathlib import Path
import re

# --- config
XACRO_FILE = Path(__file__).resolve().parent / "E05_robot.urdf.xacro"
OUT_FILE   = Path(__file__).resolve().parent / "E05_robot_ABS.urdf"
MESH_ROOT  = Path(__file__).resolve().parent / "meshes"  # your meshes live here

if not XACRO_FILE.exists():
    raise FileNotFoundError(f"Missing xacro: {XACRO_FILE}")
if not MESH_ROOT.exists():
    raise FileNotFoundError(f"Missing meshes folder: {MESH_ROOT}")

# 1) Expand xacro -> URDF text
try:
    import xacro
except Exception as e:
    raise ImportError("Please install xacro:  pip install xacro") from e

doc = xacro.process_file(str(XACRO_FILE))
urdf_text = doc.toprettyxml() if hasattr(doc, "toprettyxml") else doc.toxml()

# 2) Rewrite all mesh filenames to absolute paths under MESH_ROOT
def to_abs(match):
    q, path = match.group(1), match.group(2)
    p = path.replace("\\", "/")  # normalize

    # keep only the tail after 'meshes/' when present; else use basename
    if "meshes/" in p:
        tail = p.split("meshes/", 1)[1]
    else:
        tail = p.split("/")[-1]

    abs_path = (MESH_ROOT / tail).resolve()
    return f'filename={q}{abs_path}{q}'

patched = re.sub(r'filename=(["\'])([^"\']+)\1', to_abs, urdf_text, flags=re.IGNORECASE)

# 3) Write output
OUT_FILE.write_text(patched, encoding="utf-8")
print(f"[OK] Wrote absolute URDF: {OUT_FILE}")
